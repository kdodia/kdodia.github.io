{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","createElement","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","header_Header","siteTitle","react_default","className","gatsby_browser_entry","to","prop_types_default","components_header","layout_Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","common","DARK","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAUeE,EAAA,QAPM,kBACnBE,EAAAG,EAAAC,cAACF,EAAA,EAAD,KACEF,EAAAG,EAAAC,cAAA,uBACAJ,EAAAG,EAAAC,cAAA,wGCNJR,EAAAC,EAAAC,GAAAF,EAAAS,EAAAP,EAAA,4BAAAQ,IAAAV,EAAAS,EAAAP,EAAA,uCAAAS,IAAAX,EAAAS,EAAAP,EAAA,gCAAAU,IAAA,IAAAT,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAU,EAAAb,EAAA,GAAAc,EAAAd,EAAAK,EAAAQ,GAAAE,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAK,EAAAU,GAAAf,EAAAS,EAAAP,EAAA,yBAAAc,EAAAT,IAAAP,EAAAS,EAAAP,EAAA,+BAAAa,EAAA,aAAAf,EAAAS,EAAAP,EAAA,6BAAAa,EAAA,WAAAf,EAAAS,EAAAP,EAAA,yBAAAa,EAAA,OAAAf,EAAAS,EAAAP,EAAA,4BAAAa,EAAA,UAAAf,EAAAS,EAAAP,EAAA,+BAAAa,EAAA,iBAAAE,EAAAjB,EAAA,IAAAA,EAAAS,EAAAP,EAAA,uCAAAe,EAAA,QAAAC,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAAK,EAAAa,GAAAlB,EAAAS,EAAAP,EAAA,iCAAAiB,EAAAZ,IAAA,IAAAa,EAAApB,EAAA,IAAAA,EAAAS,EAAAP,EAAA,8BAAAkB,EAAA,IAaA,IAAMT,EAAqBP,EAAAG,EAAMc,cAAc,IAEzCT,EAAc,SAAAU,GAAK,OACvBlB,EAAAG,EAAAC,cAACG,EAAmBY,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDrB,EAAAG,EAAAC,cAAA,uCAaf,SAASE,IACP,MAAM,IAAImB,MACR,gVATJjB,EAAYkB,UAAY,CACtBL,KAAMX,EAAAP,EAAUwB,OAChBL,MAAOZ,EAAAP,EAAUyB,OAAOC,WACxBN,OAAQb,EAAAP,EAAU2B,KAClBN,SAAUd,EAAAP,EAAU2B,2BCpCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWnC,EAAQ,OALRmC,EAAEG,SAAYH,kLCMzCI,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,EAAA,QAAOC,4BAA4BH,EAASI,UAClE,OAAOC,EAAAvC,EAAMC,cAAcuC,EAAA,EAApBC,OAAAC,OAAA,CACLC,IAAKT,EAASI,SACdJ,WACAC,iBACGA,EAAcS,QAIrBZ,EAAiBT,UAAY,CAC3BW,SAAUW,EAAA7C,EAAU8C,MAAM,CACxBR,SAAUO,EAAA7C,EAAUyB,OAAOC,aAC1BA,YAGU/B,EAAA,yKChBToD,UAAS,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,UAAH,OACbC,EAAAjD,EAAAC,cAAA,UAAQiD,UAAU,eAChBD,EAAAjD,EAAAC,cAACkD,EAAA,KAAD,CAAMC,GAAG,KACPH,EAAAjD,EAAAC,cAAA,UACG+C,OAMTD,EAAOxB,UAAY,CACjByB,UAAWK,EAAArD,EAAUyB,OAAOC,YAGf,IAAA4B,EAAA,ECTTC,wBAAS,SAAAtB,GAAA,IAAGZ,EAAHY,EAAGZ,SAAH,OACb4B,EAAAjD,EAAAC,cAACkD,EAAA,YAAD,CACEhC,MAAK,YASLC,OAAQ,SAAAF,GAAI,OAEV+B,EAAAjD,EAAAC,cAACgD,EAAAjD,EAAMwD,SAAP,KACEP,EAAAjD,EAAAC,cAACwD,EAAAzD,EAAD,CACE0D,MAAOxC,EAAKyC,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,mCAChC,CAAED,KAAM,WAAYC,QAAS,mDAG/Bd,EAAAjD,EAAAC,cAAA,QAAM+D,KAAK,QAEbf,EAAAjD,EAAAC,cAACqD,EAAD,CAAQN,UAAW9B,EAAKyC,KAAKC,aAAaF,QAC1CT,EAAAjD,EAAAC,cAAA,QAAMiD,UAAWe,EAAA,EAAQC,MACtB7C,KAxBTH,KAAAiD,MAgCFZ,EAAOhC,UAAY,CACjBF,SAAUgC,EAAArD,EAAUoE,KAAK1C,YAGZ/B,EAAA","file":"component---src-pages-404-js-90133fa7d7375da8fdef.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./header.sass\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"site-header\">\n    <Link to=\"/\">\n      <h1>\n        {siteTitle}\n      </h1>\n    </Link>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Classes } from \"@blueprintjs/core\"\n\nimport Header from \"./header\"\nimport \"normalize.css\"\nimport \"@blueprintjs/core/lib/css/blueprint.css\"\nimport \"./layout.sass\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      // <>\n      <React.Fragment>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: \"description\", content: \"Personal website of Karan Dodia\" },\n            { name: \"keywords\", content: \"karan dodia, software engineer, web developer\" },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main className={Classes.DARK}>\n          {children}\n        </main>\n      </React.Fragment>\n      // </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}